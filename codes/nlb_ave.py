import numpy as np
import scipy
import pysindy as ps
import pandas as pd

def simulate_trial(t, dt, tauX, epsilon, b, c, z):
    """
    Simulates a trial for the NLB model.

    Parameters:
        t (array-like): Time array.
        dt (float): Time step.
        tauX (float): Time constant.
        epsilon (float): Non-biased stimulus input.
        b (float): Biased stimulus input.
        c (float): Size of the noise.
        z (float): Decision threshold.

    Returns:
        x (array-like): Trajectory of the decision variable.
        trial_decision_time (float): Time at which the decision was made.
        trial_choice (int): Indicates whether the decision variable reached the positive threshold (1),
                            the negative threshold (0), or if there was no decision (2).
    """
    x = np.zeros_like(t)
    for p in range(len(x) - 1):
        x[p + 1] = x[p] + (dt / tauX) * ((epsilon * x[p]) + (x[p] ** 3) - (x[p] ** 5) + b) + c * np.sqrt(dt / tauX) * np.random.randn()
        if abs(x[p]) >= z:
            return x[:p + 1], p * dt, int(x[p] >= z)
    return None, p*dt, 2


def simulate_sindy(coefs, dt, tauX, c, z, t):
    """
    Simulates a trial using the SINDy model coefficients.

    Parameters:
        coefs (array-like): The coefficients of the SINDy model.
        dt (float): Time step.
        tauX (float): Time constant.
        c (float): Size of the noise.
        z (float): Decision threshold.
        t (array-like): Time array.

    Returns:
        sim (array-like): Trajectory of the decision variable.
        sindy_trial_decision_time (float): Time at which the decision was made.
        sindy_trial_choice (int): Indicates whether the decision variable reached the positive threshold (1),
                                  the negative threshold (0), or if there was no decision (2).
    """
    sim = np.zeros_like(t)
    for h in range(len(sim) - 1):
        sim[h+1] = sim[h] + (dt / tauX) * (coefs[0] + coefs[1] * sim[h] + coefs[2] * sim[h] ** 2 + coefs[3] * sim[h] ** 3 + coefs[4] * sim[h] ** 4 + coefs[5] * sim[h] ** 5) + c * np.sqrt(dt / tauX) * np.random.randn()
 
        # Uncomment the following lines to use polynomial order 4 or 6
#         sim[h+1] = sim[h] + (dt / tauX) * (coefs[0] + coefs[1] * sim[h] + coefs[2] * sim[h] ** 2 + coefs[3] * sim[h] ** 3 + coefs[4] * sim[h] ** 4) + c * np.sqrt(dt / tauX) * np.random.randn()
        # sim[h+1] = sim[h] + (dt / tauX) * (coefs[0] + coefs[1] * sim[h] + coefs[2] * sim[h] ** 2 + coefs[3] * sim[h] ** 3 + coefs[4] * sim[h] ** 4 + coefs[5] * sim[h] ** 5 + coefs[6] * sim[h] ** 6) + c * np.sqrt(dt / tauX) * np.random.randn()
        if abs(sim[h]) >= z:
            return sim[:h + 1], h * dt, int(sim[h] >= z)
        elif h > len(sim) - 3:
            return sim[:h + 1], h * dt, 2
    return sim, h * dt, 2

def sessionNLB(trials, signal, seeding, coefs):
    """
    Runs multiple trials of the NLB model and fits the SINDy model to the simulated data.

    Parameters:
        trials (int): Number of trials to be run.
        signal (float): Strength of the drift rate.
        coefs (array-like): The average coefficients obtained from single trial fitting.
        seeding (int): Seed for random number generation to ensure reproducibility.

    Returns:
        coef_mat (list of array-like): List of coefficients for each SINDy model fit.
        choice_trials (list of int): Choices made in each NLB trial.
        sindy_choice (list of int): Choices made in each SINDy trial.
        decision_time (list of float): Decision times for each NLB trial.
        sindy_dt (list of float): Decision times for each SINDy trial.
        model_data (list of array-like): Trajectories of the decision variable for sampled NLB trials.
        sindy_data (list of array-like): Trajectories of the decision variable for sampled SINDy trials.
    """
    # Parameter initialization
    epsilon = 0.05  # Non-biased stimulus input
    b = signal  # Biased stimulus input
    z = 0.75  # Decision threshold
    tauX = 20  # Time constant
    c = 0.01  # Noise size
    dt = 0.01  # Timestep
    T_Total = 20000  # Total time
    sample = 100  # Sample of decision variable activity

    # Data storage initialization
    coef_mat = []
    choice_trials, decision_time, model_data = [], [], []
    sindy_choice, sindy_dt, sindy_data = [], [], []

    # Loop through trials
    for model in range(trials):
        t = np.arange(0, T_Total, dt)
        np.random.seed(model + 20000 + seeding)

        # Simulate trial
        x, trial_decision_time, trial_choice = simulate_trial(t, dt, tauX, epsilon, signal, c, z)
        if trial_decision_time is not None:
            decision_time.append(trial_decision_time)
            choice_trials.append(trial_choice)
            if model % sample == 0:
                model_data.append(x)

        # Simulate SINDy trial using the provided coefficients
        sim, sindy_trial_decision_time, sindy_trial_choice = simulate_sindy(coefs, dt, tauX, c, z, t)
        sindy_choice.append(sindy_trial_choice)
        sindy_dt.append(sindy_trial_decision_time)
        if model % sample == 0:
            sindy_data.append(sim)

    return coef_mat, choice_trials, sindy_choice, decision_time, sindy_dt, model_data, sindy_data
##single trial dataset##
#WARNING this takes time to run#
# trials = 10000
# coefs=[[-2.21969834e-05, 0.0236946516, 0.0160948833, 1.01316475, 0.11916566, -0.664138837], [0.000307577203, 0.0241513514, 0.000240760011, 1.03002127, -0.0282052094, -0.632806622], [0.000626101338, 0.0244547321, -0.005530517, 1.02622308, -0.048502009, -0.635868335], [0.000932797865, 0.025700841, -0.036051096, 1.05855789, -0.306120348, -0.606047968], [0.00127117176, 0.0270779409, -0.0338961904, 1.04494867, -0.277627052, -0.65179033], [0.0015810402, 0.0300098227, -0.0359872652, 1.1571517, -0.318606365, -0.539691975], [0.0019123857, 0.0304739168, -0.0372147994, 1.11182174, -0.376616383, -0.585242591], [0.00220224782, 0.0325984346, -0.0555021028, 1.13641667, -0.525536905, -0.585190539], [0.00251232507, 0.0328437668, -0.0383687908, 1.06118457, -0.394966548, -0.689824221], [0.00279119491, 0.0380300152, -0.0633824317, 1.30536726, -0.604412276, -0.420846469], [0.00304979388, 0.0392572245, -0.0750484484, 1.26970618, -0.729169132, -0.476815052], [0.00331510596, 0.0427297779, -0.0851561431, 1.36021732, -0.778156765, -0.417732349], [0.00356779336, 0.0450693609, -0.101355069, 1.43809398, -0.944526174, -0.330462031], [0.00378919645, 0.0474761296, -0.128032785, 1.51125369, -1.18397247, -0.271407177], [0.00400136942, 0.0514033618, -0.152489716, 1.63006497, -1.29486338, -0.191169024], [0.00425939053, 0.0519465991, -0.123351515, 1.50569629, -0.96878943, -0.397806803], [0.00445320629, 0.055427237, -0.16112825, 1.70528966, -1.36327409, -0.137586001], [0.00465533984, 0.0564044707, -0.153522374, 1.66389676, -1.23936901, -0.225860344], [0.00487435173, 0.0577489864, -0.164348556, 1.74687543, -1.3880752, -0.109189374], [0.0050394956, 0.0603745225, -0.189791654, 1.83289488, -1.55633228, -0.0382409606], [0.00523102769, 0.0616601841, -0.192404498, 1.85706167, -1.53726202, -0.0421555641], [0.00541612631, 0.0623786188, -0.195267341, 1.85019324, -1.50106709, -0.0711002719], [0.00559376868, 0.0635447297, -0.210089162, 1.89768719, -1.60933079, -0.0246751505], [0.00580945592, 0.0624514566, -0.190579415, 1.81436972, -1.44881965, -0.113306154], [0.00600764563, 0.0636896501, -0.200824952, 1.88702886, -1.57021489, -0.0127883793], [0.00618160896, 0.065041645, -0.217517863, 1.95561843, -1.70807842, 0.0617317232], [0.00637508149, 0.0646218351, -0.206757478, 1.90336175, -1.59182279, -0.0103578765], [0.00653761838, 0.065988155, -0.223169959, 1.97140069, -1.72058392, 0.0625290649], [0.00672022171, 0.0674341262, -0.244786504, 2.07365207, -1.91578637, 0.1781727], [0.00691831755, 0.0673902993, -0.242187803, 2.06274052, -1.881243, 0.155703365], [0.00709078218, 0.068831283, -0.25978622, 2.136199, -2.00268733, 0.225163505], [0.00729793569, 0.0679168271, -0.246023462, 2.06746602, -1.87082261, 0.141323641], [0.00744209919, 0.0704192784, -0.274697758, 2.19092056, -2.090232, 0.27724216], [0.00762897292, 0.0703855896, -0.270303627, 2.15598707, -2.00220534, 0.208535533], [0.00783134936, 0.0698861283, -0.26306021, 2.12177461, -1.94175981, 0.174244243], [0.00802325831, 0.0694828695, -0.254519992, 2.07496263, -1.84854495, 0.113337314], [0.00819145923, 0.0710054402, -0.273871505, 2.16527483, -2.01936415, 0.224152002], [0.00839090287, 0.0707565856, -0.269890769, 2.14513503, -1.98049244, 0.198853343], [0.00856168673, 0.0723810335, -0.291433438, 2.24664042, -2.1713435, 0.320887343], [0.00877135307, 0.0712779179, -0.275334121, 2.16643122, -2.01361595, 0.215557215], [0.00895704502, 0.0717082769, -0.279238959, 2.18088713, -2.03788521, 0.230820242]]
#signal=np.arange(0.0000, 0.0081, 0.0002)
# nt_var = [(trials, signal[i],coefs[i],500) for i in len(signal)]
# data=[]
# for i in range(len(nt_var)):
    # data.append(sessionNLB(nt_var[i]))
    # coefs=[[-3.59833965e-05,  3.57021310e-02,  2.84552267e-03,
    #      1.64691590e+00,  1.01822138e-02],
    #    [ 2.61030340e-04,  3.57595350e-02, -1.66511097e-02,
    #      1.63724188e+00, -1.48627869e-01],
    #    [ 5.69153642e-04,  3.60120659e-02, -3.53878412e-02,
    #      1.63408855e+00, -3.06499937e-01],
    #    [ 8.66717583e-04,  3.65947300e-02, -5.48480628e-02,
    #      1.63576789e+00, -4.55539703e-01],
    #    [ 1.16592975e-03,  3.86291500e-02, -7.38144326e-02,
    #      1.66346868e+00, -5.99760913e-01],
    #    [ 1.44885796e-03,  3.99435864e-02, -8.68218251e-02,
    #      1.67434109e+00, -7.18452591e-01],
    #    [ 1.73582182e-03,  4.15757964e-02, -9.77885459e-02,
    #      1.67509729e+00, -8.35624071e-01],
    #    [ 2.01381291e-03,  4.34757458e-02, -1.11932133e-01,
    #      1.69646653e+00, -9.53250325e-01],
    #    [ 2.29306635e-03,  4.58471603e-02, -1.23615006e-01,
    #      1.72585473e+00, -1.05990726e+00],
    #    [ 2.56889428e-03,  4.66740846e-02, -1.35787933e-01,
    #      1.71843778e+00, -1.15526609e+00],
    #    [ 2.82530037e-03,  4.91423864e-02, -1.40284732e-01,
    #      1.74017043e+00, -1.21616195e+00],
    #    [ 3.07059268e-03,  5.11766692e-02, -1.55673097e-01,
    #      1.76731172e+00, -1.31315093e+00],
    #    [ 3.31755539e-03,  5.25552603e-02, -1.57813409e-01,
    #      1.76949996e+00, -1.34800368e+00],
    #    [ 3.54736835e-03,  5.43855399e-02, -1.62266259e-01,
    #      1.79195142e+00, -1.39233034e+00],
    #    [ 3.76131051e-03,  5.68102619e-02, -1.80821222e-01,
    #      1.83254038e+00, -1.46506448e+00],
    #    [ 3.94419817e-03,  6.08177096e-02, -2.04137359e-01,
    #      1.90359312e+00, -1.54321282e+00],
    #    [ 4.16996465e-03,  6.07266531e-02, -1.93664185e-01,
    #      1.86742291e+00, -1.53240715e+00],
    #    [ 4.36979531e-03,  6.26568749e-02, -2.05556489e-01,
    #      1.90352809e+00, -1.57302851e+00],
    #    [ 4.55958824e-03,  6.33560473e-02, -2.03934020e-01,
    #      1.89347219e+00, -1.57098581e+00],
    #    [ 4.75992540e-03,  6.42465258e-02, -2.06909673e-01,
    #      1.90479837e+00, -1.58666172e+00],
    #    [ 4.92346015e-03,  6.60845689e-02, -2.19419183e-01,
    #      1.94007890e+00, -1.62028253e+00],
    #    [ 5.09204798e-03,  6.71562859e-02, -2.28490810e-01,
    #      1.95719739e+00, -1.63910472e+00],
    #    [ 5.26310793e-03,  6.82427240e-02, -2.34373935e-01,
    #      1.97015661e+00, -1.65242611e+00],
    #    [ 5.42705116e-03,  6.93315013e-02, -2.40518711e-01,
    #      1.98102135e+00, -1.66160750e+00],
    #    [ 5.62752191e-03,  6.91205772e-02, -2.34003401e-01,
    #      1.96069137e+00, -1.64459189e+00],
    #    [ 5.82514511e-03,  6.91105697e-02, -2.32117010e-01,
    #      1.95680885e+00, -1.64289475e+00],
    #    [ 6.00238421e-03,  6.98597239e-02, -2.37862772e-01,
    #      1.97183757e+00, -1.65720402e+00],
    #    [ 6.19250016e-03,  6.98075399e-02, -2.36514616e-01,
    #      1.96885373e+00, -1.65497907e+00],
    #    [ 6.36976676e-03,  7.00399432e-02, -2.36421835e-01,
    #      1.96896177e+00, -1.65642633e+00],
    #    [ 6.54891172e-03,  7.07168978e-02, -2.42033630e-01,
    #      1.98496107e+00, -1.67061103e+00],
    #    [ 6.73946216e-03,  7.08291309e-02, -2.43174434e-01,
    #      1.98840442e+00, -1.67309350e+00],
    #    [ 6.90581056e-03,  7.18148433e-02, -2.50566351e-01,
    #      2.00618208e+00, -1.68581505e+00],
    #    [ 7.11478957e-03,  7.11494333e-02, -2.44344058e-01,
    #      1.98819001e+00, -1.67014860e+00],
    #    [ 7.27431954e-03,  7.25740519e-02, -2.56499011e-01,
    #      2.02208841e+00, -1.69893452e+00],
    #    [ 7.44673148e-03,  7.31726718e-02, -2.59818443e-01,
    #      2.02724572e+00, -1.70030172e+00],
    #    [ 7.63141455e-03,  7.36227853e-02, -2.63492093e-01,
    #      2.03668600e+00, -1.70765416e+00],
    #    [ 7.82795589e-03,  7.31538836e-02, -2.57962007e-01,
    #      2.01925243e+00, -1.69205662e+00],
    #    [ 8.00940689e-03,  7.34971038e-02, -2.60188670e-01,
    #      2.02443149e+00, -1.69600468e+00],
    #    [ 8.21457250e-03,  7.28934907e-02, -2.54134783e-01,
    #      2.00675189e+00, -1.68102658e+00],
    #    [ 8.37877435e-03,  7.40988631e-02, -2.64114908e-01,
    #      2.03411455e+00, -1.70415081e+00],
    #    [ 8.57225151e-03,  7.40765181e-02, -2.63319959e-01,
    #      2.03077906e+00, -1.70057724e+00]]poly4
    
    
    
#    [[-3.22302868e-05,  9.44421451e-03,  6.42382190e-03,
#        -5.96152528e-01, -1.99903928e-02, -7.08666059e+00,
#        -7.72354975e-02],
#       [ 3.43430375e-04,  8.85627891e-03,  4.14425873e-02,
#        -6.20341182e-01,  8.36729874e-01, -7.09755327e+00,
#         5.87208517e-01],
#       [ 7.21410324e-04,  1.03137447e-02,  6.67419027e-02,
#        -5.60445180e-01,  1.29343807e+00, -6.94332217e+00,
#         8.67771654e-01],
#       [ 1.04671812e-03,  1.16884543e-02,  6.69385289e-02,
#        -4.90788576e-01,  1.73316049e+00, -6.76916890e+00,
#         1.36128059e+00],
#       [ 1.38412750e-03,  1.24966500e-02,  4.78697393e-02,
#        -5.30225188e-01,  1.38493882e+00, -6.84758977e+00,
#         1.12693699e+00],
#       [ 1.76154161e-03,  1.41751692e-02,  1.08211562e-01,
#        -5.68157678e-01,  2.55099091e+00, -7.34013566e+00,
#         1.92415719e+00],
#       [ 2.07219119e-03,  1.74265118e-02,  9.16916203e-02,
#        -3.56910173e-01,  2.28830671e+00, -6.46821013e+00,
#         1.81462447e+00],
#       [ 2.41534112e-03,  1.80340505e-02,  1.53863125e-01,
#        -4.98737017e-01,  3.86795834e+00, -7.09385498e+00,
#         3.00069506e+00],
#       [ 2.71372861e-03,  2.19214900e-02,  9.40664000e-02,
#        -1.26388672e-01,  2.31746368e+00, -5.46665388e+00,
#         1.85695779e+00],
#       [ 3.02535421e-03,  2.40869422e-02,  1.03332671e-01,
#        -2.23430534e-01,  2.81920202e+00, -6.51177337e+00,
#         2.33511850e+00],
#       [ 3.30760380e-03,  2.75848013e-02,  9.88515050e-02,
#        -1.89010199e-02,  2.80974981e+00, -5.67374930e+00,
#         2.40796386e+00],
#       [ 3.59472726e-03,  2.91874943e-02,  9.72494519e-02,
#        -2.42424389e-02,  2.79542092e+00, -5.79610666e+00,
#         2.39453640e+00],
#       [ 3.82609884e-03,  3.46020078e-02,  5.86409449e-02,
#         3.23527610e-01,  2.34917021e+00, -4.82114903e+00,
#         2.26306168e+00],
#       [ 4.08576184e-03,  3.73681143e-02,  2.38427867e-02,
#         5.08308633e-01,  1.75891094e+00, -4.24374220e+00,
#         1.97996790e+00],
#       [ 4.33868221e-03,  3.77351726e-02,  5.50405090e-02,
#         2.52572375e-01,  2.65472253e+00, -5.53053046e+00,
#         2.61373891e+00],
#       [ 4.60470444e-03,  3.93622016e-02,  6.87974816e-02,
#         2.85575705e-01,  2.60277036e+00, -5.08369342e+00,
#         2.34980122e+00],
#       [ 4.82282517e-03,  4.09017450e-02,  6.59041631e-02,
#         2.48790130e-01,  2.87508116e+00, -5.75139083e+00,
#         2.77898669e+00],
#       [ 5.05125965e-03,  4.21465430e-02,  4.95951890e-02,
#         3.72361233e-01,  2.32427597e+00, -5.01991958e+00,
#         2.27966785e+00],
#       [ 5.23521269e-03,  4.55021332e-02,  1.12454780e-02,
#         6.29118833e-01,  1.73757920e+00, -4.30336983e+00,
#         2.01973140e+00],
#       [ 5.44238306e-03,  4.72980891e-02,  6.11781765e-03,
#         6.85209589e-01,  1.85885950e+00, -4.28383014e+00,
#         2.18365366e+00],
#       [ 5.67061431e-03,  4.68829255e-02,  1.88945928e-02,
#         6.04163963e-01,  1.99329175e+00, -4.54080517e+00,
#         2.20143892e+00],
#       [ 5.87735367e-03,  4.73380423e-02,  1.58063186e-02,
#         6.58658812e-01,  1.88643257e+00, -4.22888054e+00,
#         2.07498825e+00],
#       [ 6.07811111e-03,  4.62488539e-02,  4.11342231e-02,
#         4.33882513e-01,  2.54480860e+00, -5.23278255e+00,
#         2.56685258e+00],
#       [ 6.27560920e-03,  4.83257443e-02, -7.34961739e-03,
#         8.00173564e-01,  1.29163256e+00, -3.50711705e+00,
#         1.62895496e+00],
#       [ 6.47210218e-03,  4.93109292e-02, -1.46802635e-02,
#         8.37357157e-01,  1.22349867e+00, -3.53618283e+00,
#         1.65731755e+00],
#       [ 6.66928964e-03,  4.90877726e-02, -2.58298771e-03,
#         7.50829629e-01,  1.59220999e+00, -4.01972150e+00,
#         1.97237417e+00],
#       [ 6.82732712e-03,  5.29897383e-02, -7.62175410e-02,
#         1.26390937e+00,  7.59658264e-03, -1.84456505e+00,
#         8.54205423e-01],
#       [ 7.04320313e-03,  5.20839827e-02, -6.43558783e-02,
#         1.18733264e+00,  2.42726643e-01, -2.19344498e+00,
#         1.04449307e+00],
#       [ 7.25391547e-03,  5.12444476e-02, -4.73971261e-02,
#         1.03085732e+00,  7.58666108e-01, -3.04735956e+00,
#         1.49212902e+00],
#       [ 7.42039040e-03,  5.38807967e-02, -8.84066678e-02,
#         1.27944021e+00,  7.05233305e-02, -2.17164796e+00,
#         1.06220383e+00],
#       [ 7.60490394e-03,  5.34777878e-02, -6.98678051e-02,
#         1.10849503e+00,  6.69809420e-01, -3.05739113e+00,
#         1.52828118e+00],
#       [ 7.75303693e-03,  5.68484925e-02, -1.27112781e-01,
#         1.48850777e+00, -4.77737155e-01, -1.47692698e+00,
#         7.25037876e-01],
#       [ 7.96851191e-03,  5.52498886e-02, -9.69407164e-02,
#         1.27126611e+00,  2.19678910e-01, -2.48585221e+00,
#         1.26089342e+00],
#       [ 8.17730133e-03,  5.42678282e-02, -7.94405585e-02,
#         1.16066244e+00,  5.13282866e-01, -2.81518268e+00,
#         1.38511265e+00],
#       [ 8.35269213e-03,  5.58549439e-02, -1.05830132e-01,
#         1.33417456e+00, -1.01198220e-02, -2.09658257e+00,
#         1.02366048e+00],
#       [ 8.52576615e-03,  5.78938022e-02, -1.43408658e-01,
#         1.59510400e+00, -8.19229737e-01, -9.64374765e-01,
#         4.41904588e-01],
#       [ 8.74103049e-03,  5.64774125e-02, -1.17121293e-01,
#         1.40786018e+00, -2.18438419e-01, -1.83939374e+00,
#         9.11262768e-01],
#       [ 8.92194724e-03,  5.77755775e-02, -1.40743211e-01,
#         1.56937872e+00, -7.10713258e-01, -1.16156951e+00,
#         5.67369836e-01],
#       [ 9.12553687e-03,  5.63406106e-02, -1.07868142e-01,
#         1.31629280e+00,  1.26340225e-01, -2.39080670e+00,
#         1.22432417e+00],
#       [ 9.29411407e-03,  5.83020349e-02, -1.38418553e-01,
#         1.51048472e+00, -4.57744691e-01, -1.56851032e+00,
#         7.89939043e-01],
#       [ 9.48183960e-03,  5.88425793e-02, -1.47145407e-01,
#         1.56575122e+00, -6.15641357e-01, -1.36461402e+00,
#         6.93652859e-01]]poly6
